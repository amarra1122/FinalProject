continue
install.packages("hiere")
library(hiere)
install.packages("hiere")
str(pain)
pain <- read.csv("pain.csv")
head(pain,10)
rm (list = ls())
library (gee)
library (lme4)
library (tidyr)
library(dplyr)
library(table1)
library(tidyverse)
library(ggpubr)
library(rstatix)
library (gee)
library(fastDummies)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
head(pain,10)
pain <- read.csv("pain.csv")
head(pain,10)
tab_model(fit_2,
pred.labels = c("Intercept", "Treatment 1", "Treatment 2", "Coping Syle"),
show.ci = FALSE,
dv.labels = "Tolerance Time - Random Interecepts")
pain <- read.csv("pain.csv")
head(pain,10)
rm (list = ls())
library (gee)
library (lme4)
library (tidyr)
library(dplyr)
library(table1)
library(tidyverse)
library(ggpubr)
library(rstatix)
library (gee)
library(fastDummies)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
fit_2 <- lmer(paintol~ (1|id) + factor(trt) + cs, data = pain)
pain <- read.csv("pain.csv")
fit_2 <- lmer(paintol~ (1|id) + factor(trt) + cs, data = pain)
#Summary of Random Intercepts Model
summary(fit_2)
tab_model(fit_2,
pred.labels = c("Intercept", "Treatment 1", "Treatment 2", "Coping Syle"),
show.ci = FALSE,
dv.labels = "Tolerance Time - Random Interecepts")
pain$arm <- ifelse((pain$trial == 1 & !is.na(pain$trial) | pain$trial == 3) & !is.na(pain$trial), 1, 0)
pain_dom <- subset(pain, arm == 1)
pain_nondom <- subset(pain, arm == 0)
CD4 <- read.csv("CD4.csv")
#Remove N/As
CD4 <- na.omit(CD4)
head(CD4)
CD4
CD4
print(CD4)
pain <- read.csv("pain.csv")
head(pain,10)
rm (list = ls())
library (gee)
library (lme4)
library (tidyr)
library(dplyr)
library(table1)
library(tidyverse)
library(ggpubr)
library(rstatix)
library (gee)
library(fastDummies)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
str(pain)
pain <- read.csv("pain.csv")
pain <- read.csv("pain.csv")
#Random Intercepts Model
fit_2 <- lmer(paintol~ (1|id) + factor(trt) + cs, data = pain)
tab_model(fit_2,
pred.labels = c("Intercept", "Treatment 1", "Treatment 2", "Coping Syle"),
show.ci = FALSE,
dv.labels = "Tolerance Time - Random Interecepts")
library (gee)
library (lme4)
library (tidyr)
library(dplyr)
library(table1)
library(tidyverse)
library(ggpubr)
library(rstatix)
library (gee)
library(fastDummies)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
#Random Intercepts Model
fit_2 <- lmer(paintol~ (1|id) + factor(trt) + cs, data = pain)
tab_model(fit_2,
pred.labels = c("Intercept", "Treatment 1", "Treatment 2", "Coping Syle"),
show.ci = FALSE,
dv.labels = "Tolerance Time - Random Interecepts")
tab_model(fit_2,
pred.labels = c("Intercept", "Treatment 1", "Treatment 2", "Coping Syle"),
show.ci = FALSE,
dv.labels = "Tolerance Time - Random Interecepts")
CD4 <- read.csv("CD4.csv")
#Remove N/As
CD4_noNA <- na.omit(CD4)
tab_model(fit_Q4,
pred.labels = c("Intercept", "Age Difference","Treatment 1", "Age Difference*Treatment 1"),
dv.labels = "CD4 counts - Random Interecepts")
fit_Q4 <- lmer (cd4 ~ (1 + difference|id) + difference + factor(treat) +
factor(treat)*difference, data = CD4_noNA)
pain <- read.csv("pain.csv")
library (gee)
library (lme4)
library (tidyr)
library(dplyr)
library(table1)
library(tidyverse)
library(ggpubr)
library(rstatix)
library (gee)
library(fastDummies)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
fit_Q4 <- lmer (cd4 ~ (1 + difference|id) + difference + factor(treat) +
factor(treat)*difference, data = CD4_noNA)
CD4_noNA$difference <- CD4_noNA$visage - CD4_noNA$baseage
fit_Q4 <- lmer (cd4 ~ (1 + difference|id) + difference + factor(treat) +
factor(treat)*difference, data = CD4_noNA)
tab_model(fit_Q4,
pred.labels = c("Intercept", "Age Difference","Treatment 1", "Age Difference*Treatment 1"),
dv.labels = "CD4 counts - Random Interecepts")
setwd("~/")
setwd("~/Desktop")
data <- load("Midterm2020_Data.RData")
data <- load("Midterm2020_Data.RData")
summary(data)
load("/Users/angelomarra/Desktop/Midterm2020_Data.RData")
data <- load("/Users/angelomarra/Desktop/Midterm2020_Data.RData")
> data <- load("/Users/angelomarra/Desktop/Midterm2020_Data.RData")
data <- load("/Users/angelomarra/Desktop/Midterm2020_Data.RData")
data <- load("/Users/angelomarra/Desktop/Midterm2020_Data.RData")
summary(dat)
library(table1)
head(dat, 10)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7, data = dat)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | gender, data = dat)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | factor(gender), data=dat)
library(boot)
dat2 <- dat
melanoma2$gender <-
factor(melanoma2$gender,
levels=c(1,2),
labels=c("Male", # Reference
"Female"))
dat2$gender <-
factor(dat2$gender,
levels=c(1,2),
labels=c("Male", # Reference
"Female"))
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | factor(gender), data=dat)
gender
dat2$gender
dat2$gender <-
factor(dat2$gender,
levels=c(1,2),
labels=c("Male", # Reference
"Female"))
label(dat2$gender <- "Gender"
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | factor(gender), data=dat)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | factor(gender), data=dat)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | factor(gender), data=dat2)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | gender, data=dat2)
label(dat2$gender <- "Gender"
label(dat2$gender) <- "Gender"
dat2 <- dat
dat2$gender <-
factor(dat2$gender,
levels=c(1,2),
labels=c("Male", # Reference
"Female"))
label(dat2$gender) <- "Gender"
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | gender, data=dat2)
table1(~ t1 + t2 + t3 + t4 + t5 + t6 + t7 | gender, data=dat2)
head(dat)
dat
plot (t1~age, data = dat, xlab="Age",ylab="Period 1 Nath Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
abline (beta, lwd = 3, col = 2)
abline (beta, lwd = 3, col = 2)
X = cbind (1, dat$age)
Y = matrix (dat$t1)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
abline (beta, lwd = 3, col = 2)
plot (t1~age, data = dat, xlab="Age",ylab="Period 1 Nath Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
model_t1 <- lm(t1~age, data=dat)
summary(model_t1)
lm(t1 ~ age + gender + race + dad_edu, daata=dat)
lm(t1 ~ age + gender + race + dad_edu, data=dat)
fullmodel_t1 <- lm(t1 ~ age + gender + race + dad_edu, data=dat)
summary(fullmodel_t1)
#T2
X = cbind (1, dat$age)
Y = matrix (dat$t2)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t2~age, data = dat, xlab="Age",ylab="Period 2 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
X = cbind (1, dat$age)
Y = matrix (dat$t2)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t2~age, data = dat, xlab="Age",ylab="Period 2 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
beta
X
Y
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t2~age, data = dat, xlab="Age",ylab="Period 2 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
#T1
X = cbind (1, dat$age)
Y = matrix (dat$t1)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t1~age, data = dat, xlab="Age",ylab="Period 1 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
model_t1 <- lm(t1~age, data=dat)
summary(model_t1)
fullmodel_t1 <- lm(t1 ~ age + gender + race + dad_edu, data=dat)
summary(fullmodel_t1)
#T2
X = cbind (1, dat$age)
Y = matrix (dat$t2)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t2~age, data = dat, xlab="Age",ylab="Period 2 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
#T3
X = cbind (1, dat$age)
Y = matrix (dat$t3)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t3~age, data = dat, xlab="Age",ylab="Period 3 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
X = cbind (1, dat$age)
Y = matrix (dat$t3)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
abline (beta)
plot (t3~age, data = dat, xlab="Age",ylab="Period 3 Math Score", main = "Fitted Linear Regression Model")
abline (beta)
plot (t3~age, data = dat, xlab="Age",ylab="Period 3 Math Score", main = "Fitted Linear Regression Model")
abline()
#T4
X = cbind (1, dat$age)
Y = matrix (dat$t4)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t4~age, data = dat, xlab="Age",ylab="Period 4 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
summary(fullmodel_t4)
fullmodel_t4 <- lm(t4 ~ age + gender + race + dad_edu, data=dat)
summary(fullmodel_t4)
model_t4 <- lm(t4~age, data=dat)
summary(model_t4)
summary(fullmodel_t4)
plot (t4~age, data = dat, xlab="Age",ylab="Period 4 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
X = cbind (1, dat$age)
Y = matrix (dat$t4)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t4~age, data = dat, xlab="Age",ylab="Period 4 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
#T5
X = cbind (1, dat$age)
Y = matrix (dat$t5)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t5~age, data = dat, xlab="Age",ylab="Period 5 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
#T1
X = cbind (1, dat$age)
Y = matrix (dat$t1)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t1~age, data = dat, xlab="Age",ylab="Period 1 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
model_t1 <- lm(t1~age, data=dat)
summary(model_t1)
fullmodel_t1 <- lm(t1 ~ age + gender + race + dad_edu, data=dat)
summary(fullmodel_t1)
#T7
X = cbind (1, dat$age)
Y = matrix (dat$t7)
beta = solve ( t(X) %*% X ) %*% t(X) %*% Y
plot (t7~age, data = dat, xlab="Age",ylab="Period 7 Math Score", main = "Fitted Linear Regression Model")
abline (beta, lwd = 3, col = 2)
dat
setwd("~/Desktop/FinalProject")
here::i_am(
"code/01_load_data.R"
)
setwd("~/Desktop")                                                    #Set working directory
project_data1 <- read.csv("num_posts_and_sentiment_summary_2012.csv") #Read CSV file from desktop
project_data1 <- subset(project_data1, NAME_0 == "Greece")
saveRDS(
project_data1,
file = here::here("output", "project_data1.rds")
)
project_data1 <- read.csv("num_posts_and_sentiment_summary_2012.csv") #Read CSV file from desktop
project_data1
project_data1 <- subset(project_data1, NAME_0 == "Greece")
project_data1
## Load in Data - State - 2012
here::i_am(
"code/01_load_data.R"
)
project_data1 <- read.csv("num_posts_and_sentiment_summary_2012.csv") #Read CSV file from desktop
## Load in Data - State - 2012
here::i_am(
"code/01_load_data.R"
)
here::i_am(
"code/01_load_data.R"
)
setwd("~/Desktop/FinalProject")
here::i_am(
"code/01_load_data.R"
)
setwd("~/Desktop")                                                    #Set working directory
project_data1 <- read.csv("num_posts_and_sentiment_summary_2012.csv") #Read CSV file from desktop
project_data1 <- subset(project_data1, NAME_0 == "Greece")
saveRDS(
project_data1,
file = here::here("output", "project_data1.rds")
)
here::i_am(
"Project 550 - Intro Preliminary Analysis_Marra FINAL.Rmd"
)
setwd("~/Desktop/FinalProject")
here::i_am(
"Project 550 - Intro Preliminary Analysis_Marra FINAL.Rmd"
)
setwd("~/Desktop/FinalProject")
here::i_am(
"Project 550 - Intro Preliminary Analysis_Marra FINAL.Rmd"
)
## This chunk of code loads packages intended to assist us complete our project##
library(dplyr) #For dataframe modification
library(table1) #For table creation
library(kableExtra) #For table creation
library(ggplot2) #For figure creation
setwd("~/Desktop")                                                    #Set working directory
project_data1 <- read.csv("num_posts_and_sentiment_summary_2012.csv") #Read CSV file from desktop
#! TO DO:
#!   read project_data1 from output directory
project_data1 <- readRDS(
here::here("output/project_data1.rds")
)
project_data1 <- readRDS(
here::here("output/project_data1.rds")
)
project_data1
here::i_am(
"code/02_make_table.R"
)
project_data1 <- readRDS(
here::here("output/project_data1.rds")
)
project_data1$NAME_1 <-
factor(project_data1$NAME_1,
labels=c("Aegean",                                                #Change the labels of our state data so that they don't contain the prefix "Greece_"
"Attica",
"Crete",
"Epirus and Western Macedonia",
"Macedonia and Thrace",
"Peloponnese, Western Greece and the Ionian Islands",
"Thessaly and Central Greece"
))
table <- table1(~ SCORE | NAME_1, data=project_data1)                      #Define our table1 for editing in kable, View Sentiment Index vs. Grecian State
final.table <- table %>%
kbl(digits=2, caption = "Twitter Subjective Wellbeing - Greece", ) %>%     #Round to two decimals, and create a captian for this table
kable_material(c("striped", "hover")) %>%                                 #Change the format of our table using a kable format
kable_styling(full_width = F)
final.table
saveRDS(
final.table,
file = here::here("output", "final.table.rds")
)
final.table <- readRDS(
here::here("output/final.table.rds")
)
print(final.table)
final.table
here::i_am(
"code/02_make_table.R"
)
project_data1 <- readRDS(
here::here("output/project_data1.rds")
)
saveRDS(
final.graph,
file = here::here("output", "final.graph.rds")
)
final.graph <- ggplot(project_data1, aes(x=NAME_1, y=SCORE)) +                             #X-axis = Grecian State, Y-Axis = Sentiment Index Score
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=1) +     #Create Box-Plot of Data in ggplot, change shape and color of outlier datapoints
scale_x_discrete(labels = c('Aegean','Attica','Crete',                    #Change labels on the X-axis
"Epirus and Western Macedonia", "Macedonia and Thrace",
"Peloponnese, Western Greece and the Ionian Islands",
"Thessaly and Central Greece"),
guide = guide_axis(n.dodge=4)) +                                          #Make the x-axis categories dodge eachother - so that they do not overlap
xlab("Grecian State") + ylab("Sentiment Index Score") +                   #Change the X/Y-Axis labels
ggtitle("Twitter Subjective Wellbeing - Greece") +                        #Add title to the Plot
theme(plot.title = element_text(size = 20, face = "bold")) +              #Adjust title's font and bold
theme(plot.title = element_text(hjust = 0.5)) +                           #Adjust title position
theme(axis.title= element_text(size=18, face="bold"))                     #Adjust Axes' font and bold
final.graph <- ggplot(project_data1, aes(x=NAME_1, y=SCORE)) +                             #X-axis = Grecian State, Y-Axis = Sentiment Index Score
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=1) +     #Create Box-Plot of Data in ggplot, change shape and color of outlier datapoints
scale_x_discrete(labels = c('Aegean','Attica','Crete',                    #Change labels on the X-axis
"Epirus and Western Macedonia", "Macedonia and Thrace",
"Peloponnese, Western Greece and the Ionian Islands",
"Thessaly and Central Greece"),
guide = guide_axis(n.dodge=4)) +                                          #Make the x-axis categories dodge eachother - so that they do not overlap
xlab("Grecian State") + ylab("Sentiment Index Score") +                   #Change the X/Y-Axis labels
ggtitle("Twitter Subjective Wellbeing - Greece") +                        #Add title to the Plot
theme(plot.title = element_text(size = 20, face = "bold")) +              #Adjust title's font and bold
theme(plot.title = element_text(hjust = 0.5)) +                           #Adjust title position
theme(axis.title= element_text(size=18, face="bold"))                     #Adjust Axes' font and bold
saveRDS(
final.graph,
file = here::here("output", "final.graph.rds")
)
final.graph
setwd("~/Desktop/FinalProject/code")
project_data1$NAME_1 <-
factor(project_data1$NAME_1,
labels=c("Aegean",                                                #Change the labels of our state data so that they don't contain the prefix "Greece_"
"Attica",
"Crete",
"Epirus and Western Macedonia",
"Macedonia and Thrace",
"Peloponnese, Western Greece and the Ionian Islands",
"Thessaly and Central Greece"
))
saveRDS(
project_data1,
file = here::here("output", "project_data1.rds")
)
project_data1$NAME_1 <-
factor(project_data1$NAME_1,
labels=c("Aegean",                                                #Change the labels of our state data so that they don't contain the prefix "Greece_"
"Attica",
"Crete",
"Epirus and Western Macedonia",
"Macedonia and Thrace",
"Peloponnese, Western Greece and the Ionian Islands",
"Thessaly and Central Greece"
))
#Load in final graph from project directory
final.graph <- readRDS(
here::here("output/final.graph.rds")
)
final.graph
final.graph
rmarkdown::render(
here::here("Project 550 - Intro Preliminary Analysis_Marra FINAL.Rmd")
)
